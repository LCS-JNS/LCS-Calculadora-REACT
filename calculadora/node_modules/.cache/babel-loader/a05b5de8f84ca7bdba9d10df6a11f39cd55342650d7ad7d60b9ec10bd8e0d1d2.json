{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\conta\\\\Documents\\\\LCS-Calculadora-REACT\\\\calculadora\\\\src\\\\main\\\\Calculator.jsx\";\nimport React, { Component } from \"react\";\nimport './Calculator.css';\nimport Button from \"../components/Button\";\nimport Display, { setErrorVisibility } from \"../components/Display\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst preSet = {\n  displayValue: '0',\n  clearDisplay: false,\n  operation: null,\n  values: [0, 0],\n  current: 0,\n  minus: false,\n  numpad: true\n};\nexport default class Calculator extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      ...preSet\n    };\n    this.blockNums = () => {\n      let numButtons = document.querySelectorAll('Button');\n      numButtons = [...numButtons];\n      let noOperators = [];\n      numButtons.forEach(item => {\n        if (!item.classList.contains('operator')) {\n          noOperators.push(item);\n        }\n      });\n      noOperators.forEach(btn => {\n        if (!this.state.numpad) {\n          btn.disabled = true;\n        } else {\n          btn.disabled = false;\n        }\n      });\n    };\n  }\n  async clearMemory() {\n    await this.setState({\n      ...preSet\n    });\n    setErrorVisibility(false);\n    this.blockNums();\n  }\n  async setOperation(op) {\n    if (this.state.current === 0) {\n      await this.setState({\n        operation: op,\n        current: 1,\n        clearDisplay: true,\n        numpad: true\n      });\n      this.blockNums();\n    } else {\n      const currentOperation = this.state.operation;\n      let equals = op === '=';\n      const values = [...this.state.values];\n      let displayValue = values[0] + '';\n      try {\n        if (currentOperation === '%') {\n          const porcentage = values[0];\n          const value = values[1];\n          values[0] = porcentage / 100 * value;\n        } else {\n          values[0] = eval(`${values[0]} ${currentOperation} ${values[1]}`);\n        }\n        displayValue = values[0] + '';\n        if (displayValue.includes('.')) {\n          const splitedValue = displayValue.split('.');\n          let preDotValue = splitedValue[0];\n          let postDotValue = splitedValue[1];\n          console.log(splitedValue);\n          if (preDotValue.length >= 13) {\n            displayValue = 'too Big';\n          } else {\n            let countTotal = preDotValue.length;\n            let totalSpaceRest = 13 - countTotal;\n            postDotValue = postDotValue.toString().substring(0, totalSpaceRest - 1);\n            console.log(postDotValue);\n          }\n        }\n        if (isNaN(values[0] || !isFinite(values[0]))) {\n          this.clearMemory();\n          return;\n        }\n      } catch (e) {\n        values[0] = this.state.values[0];\n      }\n      displayValue = values[0];\n      values[1] = 0;\n      const sign = Math.sign(values[0]);\n      let minus = false;\n      if (sign === -1) {\n        minus = true;\n      }\n      let current = equals ? 0 : 1;\n      console.log(displayValue.length);\n      if (displayValue.length > 13 && (displayValue > 9999999999999 || displayValue < -9999999999999 || displayValue.match('[a-z, 0-9]'))) {\n        await this.setState({\n          numpad: true\n        });\n        this.blockNums();\n        displayValue = 'too Big.';\n        equals = false;\n        current = 0;\n      } else if (this.state.numpad) {\n        this.blockNums();\n      }\n      this.setState({\n        displayValue: displayValue,\n        operation: equals ? null : op,\n        current,\n        clearDisplay: !equals,\n        values,\n        minus\n      });\n    }\n  }\n  async addDigit(n) {\n    let displayValue = this.state.displayValue;\n    if ((displayValue === '0' || displayValue === '-0') && (n === '0' || n === '0')) {\n      return;\n    }\n    if (n === '.' && this.state.displayValue.includes('.')) {\n      return;\n    }\n    if (displayValue === '0' || displayValue === '-0') {\n      if (displayValue === '0') {\n        displayValue = '';\n      } else {\n        displayValue = '-';\n      }\n    }\n    let minus = this.state.minus;\n    let clearDisplay = this.state.clearDisplay;\n    if (clearDisplay) {\n      displayValue = n;\n      clearDisplay = false;\n      if (minus) {\n        minus = false;\n      }\n    } else {\n      displayValue += n;\n    }\n    this.updateError(displayValue);\n    let displayValueLength = displayValue.length;\n    if (displayValue.includes('-')) {\n      displayValueLength--;\n    }\n    if (displayValue.includes('.')) {\n      displayValueLength--;\n    }\n    if (displayValueLength == 13) {\n      await this.setState({\n        numpad: false\n      });\n      this.blockNums();\n    } else {\n      await this.setState({\n        numpad: true\n      });\n      this.blockNums();\n    }\n    this.setState({\n      displayValue,\n      clearDisplay,\n      minus\n    });\n    if (n !== '.') {\n      this.insertNumber(displayValue);\n    }\n  }\n  setMinus() {\n    const minus = this.state.minus;\n    let displayValue = this.state.displayValue;\n    if (minus) {\n      displayValue = displayValue.replace('-', '');\n      this.setState({\n        displayValue,\n        minus: false\n      });\n    } else {\n      displayValue = '-' + displayValue;\n      this.setState({\n        displayValue,\n        minus: true\n      });\n    }\n    this.insertNumber(displayValue);\n  }\n  async bs() {\n    let displayValue = this.state.displayValue;\n    if (displayValue === '0') {\n      return;\n    }\n    if (displayValue.length === 1) {\n      displayValue = '0';\n    } else {\n      displayValue = displayValue.substring(0, displayValue.length - 1);\n    }\n    this.setState({\n      displayValue\n    });\n    this.insertNumber(displayValue);\n    this.updateError(displayValue);\n    await this.setState({\n      numpad: true\n    });\n    this.blockNums();\n  }\n  render() {\n    const addDigit = n => this.addDigit(n);\n    const setOperation = op => this.setOperation(op);\n    const setMinus = () => this.setMinus();\n    const bs = () => this.bs();\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calculator\",\n      children: [/*#__PURE__*/_jsxDEV(Display, {\n        value: this.state.displayValue,\n        minus: this.state.minus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        lable: \"C\",\n        operator: true,\n        click: () => this.clearMemory()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        lable: \"%\",\n        operator: true,\n        click: setOperation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        lable: \"/\",\n        operator: true,\n        click: setOperation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        lable: \"\\u232B\",\n        operator: true,\n        click: bs\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        lable: \"7\",\n        click: addDigit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        lable: \"8\",\n        click: addDigit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        lable: \"9\",\n        click: addDigit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        lable: \"*\",\n        operator: true,\n        click: setOperation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        lable: \"4\",\n        click: addDigit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        lable: \"5\",\n        click: addDigit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        lable: \"6\",\n        click: addDigit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        lable: \"-\",\n        operator: true,\n        click: setOperation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        lable: \"1\",\n        click: addDigit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        lable: \"2\",\n        click: addDigit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        lable: \"3\",\n        click: addDigit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        lable: \"+\",\n        operator: true,\n        click: setOperation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        lable: \"\\xB1\",\n        click: setMinus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        lable: \"0\",\n        click: addDigit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        lable: \".\",\n        click: addDigit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        lable: \"=\",\n        operator: true,\n        click: setOperation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 13\n    }, this);\n  }\n  insertNumber(displayValue) {\n    const i = this.state.current;\n    const newValue = parseFloat(displayValue);\n    const values = [...this.state.values];\n    values[i] = newValue;\n    this.setState({\n      values\n    });\n  }\n  updateError(displayValue) {\n    if (displayValue.length >= 13) {\n      if (displayValue.length > 13) {\n        this.setState({\n          displayValue\n        });\n      }\n      setErrorVisibility(true);\n    } else {\n      setErrorVisibility(false);\n    }\n  }\n}","map":{"version":3,"names":["React","Component","Button","Display","setErrorVisibility","jsxDEV","_jsxDEV","preSet","displayValue","clearDisplay","operation","values","current","minus","numpad","Calculator","constructor","arguments","state","blockNums","numButtons","document","querySelectorAll","noOperators","forEach","item","classList","contains","push","btn","disabled","clearMemory","setState","setOperation","op","currentOperation","equals","porcentage","value","eval","includes","splitedValue","split","preDotValue","postDotValue","console","log","length","countTotal","totalSpaceRest","toString","substring","isNaN","isFinite","e","sign","Math","match","addDigit","n","updateError","displayValueLength","insertNumber","setMinus","replace","bs","render","className","children","fileName","_jsxFileName","lineNumber","columnNumber","lable","operator","click","i","newValue","parseFloat"],"sources":["C:/Users/conta/Documents/LCS-Calculadora-REACT/calculadora/src/main/Calculator.jsx"],"sourcesContent":["import React, { Component } from \"react\";\r\nimport './Calculator.css'\r\n\r\nimport Button from \"../components/Button\";\r\nimport Display, { setErrorVisibility } from \"../components/Display\";\r\n\r\nconst preSet = {\r\n    displayValue: '0',\r\n    clearDisplay: false,\r\n    operation: null,\r\n    values: [0, 0],\r\n    current: 0,\r\n    minus: false,\r\n    numpad: true\r\n}\r\n\r\n\r\n\r\nexport default class Calculator extends Component {\r\n\r\n    state = { ...preSet }\r\n\r\n    async clearMemory() {\r\n        await this.setState({ ...preSet })\r\n        setErrorVisibility(false)\r\n        \r\n        this.blockNums()\r\n    }\r\n\r\n    async setOperation(op) {\r\n        if(this.state.current === 0) {\r\n            await this.setState({ operation: op, current: 1, clearDisplay: true, numpad: true})\r\n            this.blockNums()\r\n        } else {\r\n            const currentOperation = this.state.operation\r\n            let equals = op === '='\r\n            const values = [...this.state.values]\r\n            let displayValue = values[0] + ''\r\n            try {\r\n                if(currentOperation === '%') {\r\n                    const porcentage = values[0]\r\n                    const value = values[1]\r\n                    values[0] = (porcentage / 100) * value\r\n                } else {\r\n                    values[0] = eval(`${values[0]} ${currentOperation} ${values[1]}`)\r\n                }\r\n                displayValue = values[0] + ''\r\n                if(displayValue.includes('.')) {\r\n                    const splitedValue = displayValue.split('.')\r\n                    let preDotValue = splitedValue[0]\r\n                    let postDotValue = splitedValue[1]\r\n                    console.log(splitedValue)\r\n                    if(preDotValue.length >= 13) {\r\n                        displayValue = 'too Big'\r\n                    } else {\r\n                        let countTotal = preDotValue.length\r\n                        let totalSpaceRest = 13 - countTotal\r\n                        postDotValue = postDotValue.toString().substring(0, totalSpaceRest - 1)\r\n                        console.log(postDotValue)\r\n                    }\r\n                }\r\n                if(isNaN(values[0] || !isFinite(values[0]))) {\r\n                    this.clearMemory()\r\n                    return\r\n                }\r\n            } catch(e) {\r\n                values[0] = this.state.values[0]\r\n            }\r\n            displayValue = values[0]\r\n            values[1] = 0\r\n            const sign = Math.sign(values[0]) \r\n            let minus = false\r\n\r\n            if(sign === -1) {\r\n                minus = true\r\n            }\r\n            let current = equals ? 0 : 1\r\n            console.log(displayValue.length)\r\n            if(displayValue.length > 13 && (displayValue > 9999999999999 || displayValue < -9999999999999 || displayValue.match('[a-z, 0-9]')) ) {\r\n                await this.setState({ numpad: true })\r\n                this.blockNums()\r\n                displayValue = 'too Big.'\r\n                equals = false;\r\n                current = 0\r\n            } else if(this.state.numpad) {\r\n                this.blockNums()\r\n            }\r\n\r\n            this.setState({\r\n                displayValue: displayValue,\r\n                operation: equals ? null : op,\r\n                current,\r\n                clearDisplay: !equals,\r\n                values,\r\n                minus\r\n            })\r\n            \r\n        }\r\n    }\r\n\r\n    async addDigit(n) {\r\n        \r\n        let displayValue = this.state.displayValue\r\n        \r\n        if((displayValue === '0' || displayValue === '-0') && (n === '0' || n === '0')) {\r\n            return\r\n        }\r\n        if(n === '.' && this.state.displayValue.includes('.')) {\r\n            return\r\n        }\r\n\r\n        if(displayValue === '0' || displayValue === '-0') {\r\n            if(displayValue === '0') {\r\n                displayValue = ''\r\n            } else {\r\n                displayValue = '-'\r\n            }\r\n        }\r\n\r\n        let minus = this.state.minus\r\n        let clearDisplay = this.state.clearDisplay\r\n        if(clearDisplay) {\r\n            displayValue = n\r\n            clearDisplay = false\r\n            if(minus) {\r\n                minus = false\r\n            }\r\n        } else {\r\n            displayValue += n\r\n        }\r\n        \r\n        \r\n        this.updateError(displayValue)\r\n        let displayValueLength = displayValue.length\r\n        if(displayValue.includes('-')) {\r\n            displayValueLength--\r\n        }\r\n        if(displayValue.includes('.')) {\r\n            displayValueLength--\r\n        }\r\n        if(displayValueLength == 13) {\r\n            await this.setState({ numpad: false })\r\n            this.blockNums()\r\n        } else {\r\n            await this.setState({ numpad: true })\r\n            this.blockNums()\r\n        }\r\n        \r\n        this.setState({ displayValue, clearDisplay, minus })\r\n        if(n !== '.') {\r\n            this.insertNumber(displayValue)\r\n        }\r\n    }\r\n\r\n    setMinus() {\r\n        const minus = this.state.minus\r\n        let displayValue = this.state.displayValue\r\n        \r\n        if(minus) {\r\n            displayValue = displayValue.replace('-', '')\r\n            this.setState({ displayValue, minus: false })\r\n        } else {\r\n            displayValue = '-' + displayValue\r\n            this.setState({ displayValue, minus: true })\r\n        }\r\n        this.insertNumber(displayValue)\r\n    }\r\n\r\n    async bs() {\r\n        let displayValue = this.state.displayValue\r\n        if(displayValue === '0') {\r\n            return\r\n        } if(displayValue.length === 1) {\r\n            displayValue = '0'\r\n        } else {\r\n            displayValue = displayValue.substring(0, displayValue.length - 1)\r\n        }\r\n        this.setState({ displayValue })\r\n        this.insertNumber(displayValue)\r\n        this.updateError(displayValue)\r\n        await this.setState({ numpad: true })\r\n        this.blockNums()\r\n    }\r\n\r\n    render() {\r\n        const addDigit = n => this.addDigit(n)\r\n        const setOperation = op => this.setOperation(op)\r\n        const setMinus = () => this.setMinus()\r\n        const bs = () => this.bs()\r\n\r\n        return (\r\n            <div className=\"calculator\">\r\n                <Display value={this.state.displayValue} minus={this.state.minus} />\r\n                <Button lable='C' operator click={() => this.clearMemory()}/>\r\n                <Button lable='%' operator  click={setOperation}/>\r\n                <Button lable='/' operator click={setOperation}/>\r\n                <Button lable='⌫' operator click={bs}/>\r\n                <Button lable='7' click={addDigit}/>\r\n                <Button lable='8' click={addDigit}/>\r\n                <Button lable='9' click={addDigit}/>\r\n                <Button lable='*' operator click={setOperation}/>\r\n                <Button lable='4' click={addDigit}/>\r\n                <Button lable='5' click={addDigit}/>\r\n                <Button lable='6' click={addDigit}/>\r\n                <Button lable='-' operator click={setOperation}/>\r\n                <Button lable='1' click={addDigit}/>\r\n                <Button lable='2' click={addDigit}/>\r\n                <Button lable='3' click={addDigit}/>\r\n                <Button lable='+' operator click={setOperation}/>\r\n                <Button lable='±' click={setMinus}/> \r\n                <Button lable='0' click={addDigit}/>\r\n                <Button lable='.' click={addDigit}/>\r\n                <Button lable='=' operator click={setOperation}/>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    insertNumber(displayValue) {\r\n        const i = this.state.current\r\n        const newValue = parseFloat(displayValue)\r\n        const values = [...this.state.values]\r\n        values[i] = newValue\r\n        this.setState({ values })\r\n    }\r\n\r\n    updateError(displayValue) {\r\n        if(displayValue.length >= 13) {\r\n            if(displayValue.length > 13) {\r\n                \r\n                this.setState({ displayValue })\r\n            }\r\n            setErrorVisibility(true)\r\n        } else {\r\n            setErrorVisibility(false)\r\n        }\r\n    }\r\n\r\n    blockNums = () => {\r\n        let numButtons = document.querySelectorAll('Button')\r\n        numButtons = [...numButtons]\r\n        let noOperators = []\r\n        numButtons.forEach(item => {\r\n            if(!item.classList.contains('operator')) {\r\n                noOperators.push(item)\r\n            }\r\n        })\r\n        \r\n        noOperators.forEach(btn => {\r\n            if(!this.state.numpad) {\r\n                btn.disabled = true\r\n            } else {\r\n                btn.disabled = false\r\n            }\r\n        })\r\n    }\r\n}  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}